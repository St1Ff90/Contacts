@using DAL.Entities
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@model IEnumerable<DAL.Entities.Client>

@{
    ViewData["Title"] = "Index";

}



<form method="get">
    <div class="form-inline">
        <label class="control-label label-filter">Клиент: </label>
        @*@Html.DropDownList("FullName", Model.FulName as SelectList, htmlAttributes: new { @class = "form-control" })*@
        @Html.DropDownListFor(item => item.First().Id, new SelectList(Model.ToArray(), "Id", "FullName"))
        <input type="submit" value="Применить фильтр" class="btn btn-default filter-btn" />
    </div>
</form>


@if ((Guid)ViewData["Id"] != Guid.Empty)
{
    Client client = Model.FirstOrDefault(x => x.Id == (Guid)ViewData["Id"]);

    if (client.Contacts.Count > 0)
    {
        <label>Contacts</label>
        @*  @Html.DisplayNameFor(modelItem => contact.Name)
        ;
        @Html.DisplayFor(modelItem => contact.Name)
        ;*@

        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(modelItem => client.Contacts.First().Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(modelItem => client.Contacts.First().Description)
                    </th>
                     <th>
                        @Html.DisplayNameFor(modelItem => client.Contacts.First().Phone)
                    </th>
                     <th>
                        @Html.DisplayNameFor(modelItem => client.Contacts.First().BirthDayDate)
                    </th>

                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var contact in client.Contacts)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => contact.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => contact.Description)
                        </td>
                         <td>
                            @Html.DisplayFor(modelItem => contact.Phone)
                        </td>
                           <td>
                            @Html.DisplayFor(modelItem => contact.BirthDayDate)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@contact.Id">Edit</a> |
                            <a asp-action="Details" asp-route-id="@contact.Id">Details</a> |
                            <a asp-action="Delete" asp-route-id="@contact.Id">Delete</a>
                        </td>
                    </tr>
                }


            </tbody>
        </table>
    }

    if (client.Adresses.Count > 0)
    {
        <label>Addresses</label>

        @*  @Html.DisplayNameFor(modelItem => contact.Name)
        ;
        @Html.DisplayFor(modelItem => contact.Name)
        ;*@

        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(modelItem => client.Adresses.First().Country)
                    </th>
                    <th>
                        @Html.DisplayNameFor(modelItem => client.Adresses.First().AdressText)
                    </th>
                    <th>
                        @Html.DisplayNameFor(modelItem => client.Adresses.First().Description)
                    </th>
                    

                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var contact in client.Adresses)
                {
                    <tr>
                         <td>
                            @Html.DisplayFor(modelItem => contact.Country)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => contact.AdressText)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => contact.Description)
                        </td>

                        <td>
                            <a asp-action="Edit" asp-route-id="@contact.Id">Edit</a> |
                            <a asp-action="Details" asp-route-id="@contact.Id">Details</a> |
                            <a asp-action="Delete" asp-route-id="@contact.Id">Delete</a>
                        </td>
                    </tr>
                }


            </tbody>
        </table>
    }
}

<br />
<br />
<br />
<br />
<div class="container-fluid">
    <div class="row-fluid">
        <div class="span2">
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.CreateDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Description)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FullName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ShortName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.UpdateDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.RegistrationNumber)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.TaxNumber)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Id)
                        </th>

                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.CreateDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FullName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ShortName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.UpdateDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.RegistrationNumber)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TaxNumber)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Id)
                            </td>
                            <td>
                                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>


<p>
    <a asp-action="Create">Create New</a>
</p>
